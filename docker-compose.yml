version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:${POSTGRES_VERSION:-16-alpine}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-n8n}
      POSTGRES_USER: ${POSTGRES_USER:-n8n}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-n8n_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-n8n} -d ${POSTGRES_DB:-n8n}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - n8n-network

  # Redis for n8n queue
  redis:
    image: redis:${REDIS_VERSION:-8-alpine}
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD:-redis_password} ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - n8n-network


  # n8n Workflow Automation
  n8n:
    image: docker.n8n.io/n8nio/n8n:${N8N_VERSION:-1.112.4}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Database Configuration
      - N8N_DB_TYPE=${N8N_DB_TYPE:-postgresdb}
      - N8N_DB_POSTGRESDB_HOST=${N8N_DB_POSTGRESDB_HOST:-postgres}
      - N8N_DB_POSTGRESDB_PORT=${N8N_DB_POSTGRESDB_PORT:-5432}
      - N8N_DB_POSTGRESDB_DATABASE=${N8N_DB_POSTGRESDB_DATABASE:-n8n}
      - N8N_DB_POSTGRESDB_USER=${N8N_DB_POSTGRESDB_USER:-n8n}
      - N8N_DB_POSTGRESDB_PASSWORD=${N8N_DB_POSTGRESDB_PASSWORD:-n8n_password}
      
      # Redis Configuration
      - N8N_QUEUE_BULL_REDIS_HOST=${N8N_QUEUE_BULL_REDIS_HOST:-redis}
      - N8N_QUEUE_BULL_REDIS_PORT=${N8N_QUEUE_BULL_REDIS_PORT:-6379}
      - N8N_QUEUE_BULL_REDIS_DB=${N8N_QUEUE_BULL_REDIS_DB:-0}
      - N8N_QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      
      # n8n Core Configuration
      - N8N_HOST=${N8N_HOST:-n8n.localhost}
      - N8N_PORT=${N8N_PORT:-5678}
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - WEBHOOK_URL=${WEBHOOK_URL:-http://n8n.localhost:5678/}
      
      # Security Configuration
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-your-encryption-key}
      - N8N_USER_MANAGEMENT_DISABLED=${N8N_USER_MANAGEMENT_DISABLED:-false}
      
      # Logging Configuration
      - N8N_LOG_LEVEL=${N8N_LOG_LEVEL:-info}
      - N8N_LOG_OUTPUT=${N8N_LOG_OUTPUT:-console}
      
      # Execution Configuration
      - N8N_EXECUTIONS_PROCESS=${N8N_EXECUTIONS_PROCESS:-main}
      - N8N_EXECUTIONS_MODE=${N8N_EXECUTIONS_MODE:-regular}
      
      # File System Configuration
      - N8N_DEFAULT_BINARY_DATA_MODE=${N8N_DEFAULT_BINARY_DATA_MODE:-filesystem}
      - N8N_BINARY_DATA_TTL=${N8N_BINARY_DATA_TTL:-24}
      
      # Timezone Configuration
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-UTC}
      - TZ=${GENERIC_TIMEZONE:-UTC}
      
      # Development Configuration
      - NODE_ENV=development
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    volumes:
      - n8n_data:/home/node/.n8n
      - ./local-files:/files
    ports:
      - "5678:5678"
    networks:
      - n8n-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  n8n_data:
    driver: local

networks:
  n8n-network:
    driver: bridge
